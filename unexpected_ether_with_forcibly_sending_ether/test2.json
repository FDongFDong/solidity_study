// logs
[
  EventLog {
    provider: HardhatEthersProvider {
        _hardhatProvider: LazyInitializationProviderAdapter {
        _providerFactory: [AsyncFunction (anonymous)],
        _emitter: [EventEmitter],
        _initializingPromise: [Promise],
        provider: [BackwardsCompatibilityProviderAdapter]
        },
        _networkName: 'hardhat',
        _blockListeners: [],
        _transactionHashListeners: Map(0) {},
        _eventListeners: []
    },
    transactionHash: '0xcb89f641ba7cef94bcc6e8f7928355a0b9defe3b3f31e51ee1be03a58dd0338b',
    blockHash: '0x1d253433980f68b35138339a5e9f65dcca510ac5290b9bbb9d85c0aea1c116d4',
    blockNumber: 2,
    removed: undefined,
    address: '0x5FbDB2315678afecb367f032d93F642f64180aa3',
    data: '0x00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000de0b6b3a7640000',
    topics: [
        '0x9bdafa501d9103662ce3542afa89d6fb94808df23a4f800c064a2ecc2081ce04'
    ],
    index: 0,
    transactionIndex: 0,
    interface: Interface {
        fragments: [
        [EventFragment],
        [FunctionFragment],
        [FunctionFragment],
        [FunctionFragment],
        [FunctionFragment],
        [FunctionFragment],
        [FunctionFragment],
        [FunctionFragment],
        [FunctionFragment],
        [FunctionFragment],
        [FunctionFragment]
        ],
        deploy: ConstructorFragment {
        type: 'constructor',
        inputs: [],
        payable: false,
        gas: null
        },
        fallback: null,
        receive: false
    },
    fragment: EventFragment {
        type: 'event',
        inputs: [ [ParamType], [ParamType] ],
        name: 'BUY',
        anonymous: false
    },
    args: Result(2) [ 1n, 1000000000000000000n ]
  }
]