/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  InsecureNaiveBank,
  InsecureNaiveBankInterface,
} from "../InsecureNaiveBank";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "INTEREST_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "applyInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "minBankBalanceRequired_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositBankFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "depositFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBankBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050608051610e1361006e600039600081816103d5015281816104ab015261069c0152610e136000f3fe6080604052600436106100865760003560e01c80637456fed6116100595780637456fed6146101265780637b83b50b146101515780638da5cb5b1461017c578063aa67c919146101a7578063d961d190146101c357610086565b80632e1a7d4d1461008b57806347734892146100b45780634bf516b4146100f15780635b72a33a146100fb575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad91906108ae565b6101ee565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610939565b610374565b6040516100e89190610975565b60405180910390f35b6100f96103bc565b005b34801561010757600080fd5b5061011061048f565b60405161011d9190610975565b60405180910390f35b34801561013257600080fd5b5061013b610494565b6040516101489190610975565b60405180910390f35b34801561015d57600080fd5b506101666104a1565b6040516101739190610975565b60405180910390f35b34801561018857600080fd5b506101916104a9565b60405161019e919061099f565b60405180910390f35b6101c160048036038101906101bc9190610939565b6104cd565b005b3480156101cf57600080fd5b506101d8610681565b6040516101e59190610975565b60405180910390f35b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561026f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026690610a17565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102bd9190610a66565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516102ea90610acb565b60006040518083038185875af1925050503d8060008114610327576040519150601f19603f3d011682016040523d82523d6000602084013e61032c565b606091505b5050905080610370576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036790610b2c565b60405180910390fd5b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff161461044a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044190610b98565b60405180910390fd5b6000341161048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048490610c04565b60405180910390fd5b565b600581565b6000600180549050905090565b600047905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361053c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053390610c70565b60405180910390fd5b6000341161057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690610c04565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610629576001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106779190610c90565b9250508190555050565b60003373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610711576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070890610b98565b60405180910390fd5b60005b60018054905081101561086f5760006001828154811061073757610736610cc4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506064600560646107b79190610c90565b826107c29190610cf3565b6107cc9190610d64565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054846108589190610c90565b93505050808061086790610d95565b915050610714565b5090565b600080fd5b6000819050919050565b61088b81610878565b811461089657600080fd5b50565b6000813590506108a881610882565b92915050565b6000602082840312156108c4576108c3610873565b5b60006108d284828501610899565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610906826108db565b9050919050565b610916816108fb565b811461092157600080fd5b50565b6000813590506109338161090d565b92915050565b60006020828403121561094f5761094e610873565b5b600061095d84828501610924565b91505092915050565b61096f81610878565b82525050565b600060208201905061098a6000830184610966565b92915050565b610999816108fb565b82525050565b60006020820190506109b46000830184610990565b92915050565b600082825260208201905092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610a016014836109ba565b9150610a0c826109cb565b602082019050919050565b60006020820190508181036000830152610a30816109f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a7182610878565b9150610a7c83610878565b9250828203905081811115610a9457610a93610a37565b5b92915050565b600081905092915050565b50565b6000610ab5600083610a9a565b9150610ac082610aa5565b600082019050919050565b6000610ad682610aa8565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610b166014836109ba565b9150610b2182610ae0565b602082019050919050565b60006020820190508181036000830152610b4581610b09565b9050919050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b6000610b826015836109ba565b9150610b8d82610b4c565b602082019050919050565b60006020820190508181036000830152610bb181610b75565b9050919050565b7f5265717569726520736f6d652066756e64730000000000000000000000000000600082015250565b6000610bee6012836109ba565b9150610bf982610bb8565b602082019050919050565b60006020820190508181036000830152610c1d81610be1565b9050919050565b7f446f206e6f7420737570706f72742061207a65726f2061646472657373000000600082015250565b6000610c5a601d836109ba565b9150610c6582610c24565b602082019050919050565b60006020820190508181036000830152610c8981610c4d565b9050919050565b6000610c9b82610878565b9150610ca683610878565b9250828201905080821115610cbe57610cbd610a37565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610cfe82610878565b9150610d0983610878565b9250828202610d1781610878565b91508282048414831517610d2e57610d2d610a37565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d6f82610878565b9150610d7a83610878565b925082610d8a57610d89610d35565b5b828204905092915050565b6000610da082610878565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610dd257610dd1610a37565b5b60018201905091905056fea2646970667358221220efd1d63e8be75afc28de3e61ea0c8a71e4c8c758046875b47218842a0e1679c464736f6c63430008130033";

type InsecureNaiveBankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InsecureNaiveBankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InsecureNaiveBank__factory extends ContractFactory {
  constructor(...args: InsecureNaiveBankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InsecureNaiveBank & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InsecureNaiveBank__factory {
    return super.connect(runner) as InsecureNaiveBank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InsecureNaiveBankInterface {
    return new Interface(_abi) as InsecureNaiveBankInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InsecureNaiveBank {
    return new Contract(address, _abi, runner) as unknown as InsecureNaiveBank;
  }
}
