/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Attack, AttackInterface } from "../../Attack.sol/Attack";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INaiveBank",
        name: "_naiveBank",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "dummyAccountCount",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "naiveBank",
    outputs: [
      {
        internalType: "contract INaiveBank",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "_noAccounts",
        type: "uint160",
      },
    ],
    name: "openDummyAccounts",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161063a38038061063a833981810160405281019061003291906100e1565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505061010e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b60006100ae82610091565b9050919050565b6100be816100a3565b81146100c957600080fd5b50565b6000815190506100db816100b5565b92915050565b6000602082840312156100f7576100f661006c565b5b6000610105848285016100cc565b91505092915050565b60805161050b61012f6000396000818160d10152610184015261050b6000f3fe6080604052600436106100345760003560e01c8063a487975614610039578063d57b2f6714610064578063fb51d2701461008f575b600080fd5b34801561004557600080fd5b5061004e6100ab565b60405161005b91906102be565b60405180910390f35b34801561007057600080fd5b506100796100cf565b6040516100869190610338565b60405180910390f35b6100a960048036038101906100a49190610384565b6100f3565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b8073ffffffffffffffffffffffffffffffffffffffff16341461014b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101429061040e565b60405180910390fd5b60005b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16101561028b577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663aa67c919600160008081819054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101ed9061045d565b91906101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790556040518363ffffffff1660e01b815260040161024691906104ba565b6000604051808303818588803b15801561025f57600080fd5b505af1158015610273573d6000803e3d6000fd5b505050505080806102839061045d565b91505061014e565b5050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6102b88161028f565b82525050565b60006020820190506102d360008301846102af565b92915050565b6000819050919050565b60006102fe6102f96102f48461028f565b6102d9565b61028f565b9050919050565b6000610310826102e3565b9050919050565b600061032282610305565b9050919050565b61033281610317565b82525050565b600060208201905061034d6000830184610329565b92915050565b600080fd5b6103618161028f565b811461036c57600080fd5b50565b60008135905061037e81610358565b92915050565b60006020828403121561039a57610399610353565b5b60006103a88482850161036f565b91505092915050565b600082825260208201905092915050565b7f496e76616c696420457468657220616d6f756e74000000000000000000000000600082015250565b60006103f86014836103b1565b9150610403826103c2565b602082019050919050565b60006020820190508181036000830152610427816103eb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104688261028f565b915073ffffffffffffffffffffffffffffffffffffffff820361048e5761048d61042e565b5b600182019050919050565b60006104a48261028f565b9050919050565b6104b481610499565b82525050565b60006020820190506104cf60008301846104ab565b9291505056fea26469706673582212202230a6f63c02ab50e63c1e89e480a61396e7a93b5861837b8684aff739f94e4964736f6c63430008130033";

type AttackConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttackConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Attack__factory extends ContractFactory {
  constructor(...args: AttackConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _naiveBank: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_naiveBank, overrides || {});
  }
  override deploy(
    _naiveBank: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_naiveBank, overrides || {}) as Promise<
      Attack & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Attack__factory {
    return super.connect(runner) as Attack__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackInterface {
    return new Interface(_abi) as AttackInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Attack {
    return new Contract(address, _abi, runner) as unknown as Attack;
  }
}
