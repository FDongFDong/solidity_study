/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  FixedNaiveBank,
  FixedNaiveBankInterface,
} from "../FixedNaiveBank";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "INTEREST_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_beginUserID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endUserID",
        type: "uint256",
      },
    ],
    name: "batchApplyInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "minBankBalanceRequiredThisBatch_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositBankFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "depositFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBankBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805161100d61006e600039600081816103a1015281816106830152610759015261100d6000f3fe6080604052600436106100865760003560e01c80635b72a33a116100595780635b72a33a146101385780637456fed6146101635780637b83b50b1461018e5780638da5cb5b146101b9578063aa67c919146101e457610086565b80632e1a7d4d1461008b5780632f7b8ed7146100b457806347734892146100f15780634bf516b41461012e575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad919061096a565b610200565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610997565b610386565b6040516100e891906109e6565b60405180910390f35b3480156100fd57600080fd5b5061011860048036038101906101139190610a5f565b610622565b60405161012591906109e6565b60405180910390f35b61013661066a565b005b34801561014457600080fd5b5061014d61073d565b60405161015a91906109e6565b60405180910390f35b34801561016f57600080fd5b50610178610742565b60405161018591906109e6565b60405180910390f35b34801561019a57600080fd5b506101a361074f565b6040516101b091906109e6565b60405180910390f35b3480156101c557600080fd5b506101ce610757565b6040516101db9190610a9b565b60405180910390f35b6101fe60048036038101906101f99190610a5f565b61077b565b005b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890610b13565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102cf9190610b62565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516102fc90610bc7565b60006040518083038185875af1925050503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5050905080610382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037990610c28565b60405180910390fd5b5050565b60003373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d90610c94565b60405180910390fd5b600180549050831061045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490610d00565b60405180910390fd5b828210156104a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049790610d92565b60405180910390fd5b60018054905082106104c057600180805490506104bd9190610b62565b91505b60008390505b82811161061b576000600182815481106104e3576104e2610db2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506064600560646105639190610de1565b8261056e9190610e15565b6105789190610e86565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054846106049190610de1565b93505050808061061390610eb7565b9150506104c6565b5092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16146106f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ef90610c94565b60405180910390fd5b6000341161073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073290610f4b565b60405180910390fd5b565b600581565b6000600180549050905090565b600047905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610fb7565b60405180910390fd5b6000341161082d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082490610f4b565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036108d7576001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109259190610de1565b9250508190555050565b600080fd5b6000819050919050565b61094781610934565b811461095257600080fd5b50565b6000813590506109648161093e565b92915050565b6000602082840312156109805761097f61092f565b5b600061098e84828501610955565b91505092915050565b600080604083850312156109ae576109ad61092f565b5b60006109bc85828601610955565b92505060206109cd85828601610955565b9150509250929050565b6109e081610934565b82525050565b60006020820190506109fb60008301846109d7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a2c82610a01565b9050919050565b610a3c81610a21565b8114610a4757600080fd5b50565b600081359050610a5981610a33565b92915050565b600060208284031215610a7557610a7461092f565b5b6000610a8384828501610a4a565b91505092915050565b610a9581610a21565b82525050565b6000602082019050610ab06000830184610a8c565b92915050565b600082825260208201905092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610afd601483610ab6565b9150610b0882610ac7565b602082019050919050565b60006020820190508181036000830152610b2c81610af0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b6d82610934565b9150610b7883610934565b9250828203905081811115610b9057610b8f610b33565b5b92915050565b600081905092915050565b50565b6000610bb1600083610b96565b9150610bbc82610ba1565b600082019050919050565b6000610bd282610ba4565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610c12601483610ab6565b9150610c1d82610bdc565b602082019050919050565b60006020820190508181036000830152610c4181610c05565b9050919050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b6000610c7e601583610ab6565b9150610c8982610c48565b602082019050919050565b60006020820190508181036000830152610cad81610c71565b9050919050565b7f5f626567696e557365724944206973206f7574206f662072616e676500000000600082015250565b6000610cea601c83610ab6565b9150610cf582610cb4565b602082019050919050565b60006020820190508181036000830152610d1981610cdd565b9050919050565b7f5f656e64557365724944206d757374206265206d6f7265207468616e206f722060008201527f657175616c20746f205f626567696e5573657249440000000000000000000000602082015250565b6000610d7c603583610ab6565b9150610d8782610d20565b604082019050919050565b60006020820190508181036000830152610dab81610d6f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610dec82610934565b9150610df783610934565b9250828201905080821115610e0f57610e0e610b33565b5b92915050565b6000610e2082610934565b9150610e2b83610934565b9250828202610e3981610934565b91508282048414831517610e5057610e4f610b33565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e9182610934565b9150610e9c83610934565b925082610eac57610eab610e57565b5b828204905092915050565b6000610ec282610934565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ef457610ef3610b33565b5b600182019050919050565b7f5265717569726520736f6d652066756e64730000000000000000000000000000600082015250565b6000610f35601283610ab6565b9150610f4082610eff565b602082019050919050565b60006020820190508181036000830152610f6481610f28565b9050919050565b7f446f206e6f7420737570706f72742061207a65726f2061646472657373000000600082015250565b6000610fa1601d83610ab6565b9150610fac82610f6b565b602082019050919050565b60006020820190508181036000830152610fd081610f94565b905091905056fea26469706673582212204bc827f1c5af5efb9d00c4d0f7f60d1f1e0a84fc0642803f221f51ec9279900864736f6c63430008130033";

type FixedNaiveBankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FixedNaiveBankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FixedNaiveBank__factory extends ContractFactory {
  constructor(...args: FixedNaiveBankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FixedNaiveBank & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FixedNaiveBank__factory {
    return super.connect(runner) as FixedNaiveBank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FixedNaiveBankInterface {
    return new Interface(_abi) as FixedNaiveBankInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FixedNaiveBank {
    return new Contract(address, _abi, runner) as unknown as FixedNaiveBank;
  }
}
