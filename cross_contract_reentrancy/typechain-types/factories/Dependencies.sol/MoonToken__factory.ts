/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MoonToken,
  MoonTokenInterface,
} from "../../Dependencies.sol/MoonToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
    ],
    name: "burnAccount",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611054806100616000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80635c65816511610097578063a9059cbb11610066578063a9059cbb146102b0578063d3a5059a146102e0578063dd62ed3e14610310578063f2fde38b14610340576100f5565b80635c6581651461021457806370a08231146102445780638da5cb5b1461027457806395d89b4114610292576100f5565b806323b872dd116100d357806323b872dd1461016657806327e235e314610196578063313ce567146101c657806340c10f19146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b61010261035c565b60405161010f9190610c9f565b60405180910390f35b610132600480360381019061012d9190610d5a565b610395565b60405161013f9190610db5565b60405180910390f35b610150610422565b60405161015d9190610ddf565b60405180910390f35b610180600480360381019061017b9190610dfa565b610428565b60405161018d9190610db5565b60405180910390f35b6101b060048036038101906101ab9190610e4d565b610673565b6040516101bd9190610ddf565b60405180910390f35b6101ce61068b565b6040516101db9190610e96565b60405180910390f35b6101fe60048036038101906101f99190610d5a565b610690565b60405161020b9190610db5565b60405180910390f35b61022e60048036038101906102299190610eb1565b61079a565b60405161023b9190610ddf565b60405180910390f35b61025e60048036038101906102599190610e4d565b6107bf565b60405161026b9190610ddf565b60405180910390f35b61027c610807565b6040516102899190610f00565b60405180910390f35b61029a61082d565b6040516102a79190610c9f565b60405180910390f35b6102ca60048036038101906102c59190610d5a565b610866565b6040516102d79190610db5565b60405180910390f35b6102fa60048036038101906102f59190610e4d565b610967565b6040516103079190610db5565b60405180910390f35b61032a60048036038101906103259190610eb1565b610ab4565b6040516103379190610ddf565b60405180910390f35b61035a60048036038101906103559190610e4d565b610b3b565b005b6040518060400160405280600a81526020017f4d4f4f4e20546f6b656e0000000000000000000000000000000000000000000081525081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60025481565b600080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156104f85750828110155b61050157600080fd5b826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054f9190610f4a565b92505081905550826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105a49190610f7e565b925050819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156106675782600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461065f9190610f7e565b925050819055505b60019150509392505050565b60006020528060005260406000206000915090505481565b601281565b60003373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610722576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071990610ffe565b60405180910390fd5b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107709190610f4a565b9250508190555081600260008282546107899190610f4a565b925050819055506001905092915050565b6001602052816000526040600020602052806000526040600020600091509150505481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600481526020017f4d4f4f4e0000000000000000000000000000000000000000000000000000000081525081565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108b357600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109019190610f7e565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109569190610f4a565b925050819055506001905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f090610ffe565b60405180910390fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a8a9190610f7e565b925050819055508060026000828254610aa39190610f7e565b925050819055506001915050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc290610ffe565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c49578082015181840152602081019050610c2e565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c7182610c0f565b610c7b8185610c1a565b9350610c8b818560208601610c2b565b610c9481610c55565b840191505092915050565b60006020820190508181036000830152610cb98184610c66565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cf182610cc6565b9050919050565b610d0181610ce6565b8114610d0c57600080fd5b50565b600081359050610d1e81610cf8565b92915050565b6000819050919050565b610d3781610d24565b8114610d4257600080fd5b50565b600081359050610d5481610d2e565b92915050565b60008060408385031215610d7157610d70610cc1565b5b6000610d7f85828601610d0f565b9250506020610d9085828601610d45565b9150509250929050565b60008115159050919050565b610daf81610d9a565b82525050565b6000602082019050610dca6000830184610da6565b92915050565b610dd981610d24565b82525050565b6000602082019050610df46000830184610dd0565b92915050565b600080600060608486031215610e1357610e12610cc1565b5b6000610e2186828701610d0f565b9350506020610e3286828701610d0f565b9250506040610e4386828701610d45565b9150509250925092565b600060208284031215610e6357610e62610cc1565b5b6000610e7184828501610d0f565b91505092915050565b600060ff82169050919050565b610e9081610e7a565b82525050565b6000602082019050610eab6000830184610e87565b92915050565b60008060408385031215610ec857610ec7610cc1565b5b6000610ed685828601610d0f565b9250506020610ee785828601610d0f565b9150509250929050565b610efa81610ce6565b82525050565b6000602082019050610f156000830184610ef1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f5582610d24565b9150610f6083610d24565b9250828201905080821115610f7857610f77610f1b565b5b92915050565b6000610f8982610d24565b9150610f9483610d24565b9250828203905081811115610fac57610fab610f1b565b5b92915050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b6000610fe8601583610c1a565b9150610ff382610fb2565b602082019050919050565b6000602082019050818103600083015261101781610fdb565b905091905056fea2646970667358221220d849cf30881c0ccef9bf5b5a9935b7fe3ceed163fea5b192ea12af6ceaeafeb564736f6c63430008110033";

type MoonTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MoonTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MoonToken__factory extends ContractFactory {
  constructor(...args: MoonTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MoonToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MoonToken__factory {
    return super.connect(runner) as MoonToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MoonTokenInterface {
    return new Interface(_abi) as MoonTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MoonToken {
    return new Contract(address, _abi, runner) as unknown as MoonToken;
  }
}
